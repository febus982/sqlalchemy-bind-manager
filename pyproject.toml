[tool.poetry]
name = "sqlalchemy-bind-manager"
version = "0.0.0"
description = "A manager to easily handle multiple SQLAlchemy configurations"
license = "MIT"
authors = ["Federico Busetti <729029+febus982@users.noreply.github.com>"]
repository = "https://github.com/febus982/sqlalchemy-bind-manager"
homepage = "https://febus982.github.io/sqlalchemy-bind-manager"
readme = "README.md"
packages = [{include = "sqlalchemy_bind_manager"}]
keywords = ["sqlalchemy", "config", "manager"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Database :: Front-Ends",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

[tool.poetry-dynamic-versioning]
enable = true

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
pydantic = "^2.1.1"
SQLAlchemy = { version = "~2.0.0", extras = ["asyncio", "mypy"] }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
aiosqlite = ">=0.18.0"
coverage = ">=6.5.0"
mike = ">=2.0.0"
mkdocs = ">=1.4.3"
mkdocstrings = { version = ">=0.24.0", extras = ["python"] }
mkdocs-gen-files = ">=0.5.0"
mkdocs-material = ">=9.1.16"
mypy = ">=0.990"
pymdown-extensions = ">=10.0.1"
pytest = "^8.0.0"
pytest-asyncio = ">=0.20.3"
pytest-cov = ">=4.0.0"
pytest-factoryboy = ">=2.5.0"
pytest-xdist = ">=3.0.2"
ruff = ">=0.0.263"
tox = "^4.14.1"
mkdocs-awesome-pages-plugin = "^2.9.2"

############################
### Tools configuration  ###
############################
[tool.coverage.run]
branch = true
source = ["sqlalchemy_bind_manager"]
# It's not necessary to setup concurrency here
# because pytest-cov takes care of that

[tool.coverage.report]
fail_under = 100
exclude_also = [
    "pragma: no cover",
    "pass",
    "\\.\\.\\.",
    ]

[tool.mypy]
files = "sqlalchemy_bind_manager"
python_version = "3.8"
plugins = "pydantic.mypy"

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
addopts = "-n auto --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.ruff]
extend-exclude = ["docs", ".tox"]
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "S",  # flake8-bandit
    "RUF",  # ruff-specific-rules
]
# Ignoring rules problematic with formatter
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"repository.py" = ["F401"]
"tests/**/*.py" = ["S101"]  # Allow assert usage on tests
